(function () {
  function t(e, r, n) {
    function o(a, c) {
      if (!r[a]) {
        if (!e[a]) {
          var u = "function" == typeof require && require;
          if (!c && u) return u(a, !0);
          if (i) return i(a, !0);
          var s = new Error("Cannot find module '" + a + "'");
          throw ((s.code = "MODULE_NOT_FOUND"), s);
        }
        var l = (r[a] = { exports: {} });
        e[a][0].call(
          l.exports,
          function (t) {
            var r = e[a][1][t];
            return o(r || t);
          },
          l,
          l.exports,
          t,
          e,
          r,
          n
        );
      }
      return r[a].exports;
    }
    for (var i = "function" == typeof require && require, a = 0; a < n.length; a++) o(n[a]);
    return o;
  }
  return t;
})()(
  {
    1: [
      function (t, e, r) {
        "use strict";
        function n(t) {
          return (
            (n =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (t) {
                    return typeof t;
                  }
                : function (t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype
                      ? "symbol"
                      : typeof t;
                  }),
            n(t)
          );
        }
        function o() {
          function t(t, e, r) {
            return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e];
          }
          function e(t, e, r, n) {
            var o = e && e.prototype instanceof i ? e : i,
              a = Object.create(o.prototype),
              c = new y(n || []);
            return b(a, "_invoke", { value: l(t, r, c) }), a;
          }
          function r(t, e, r) {
            try {
              return { type: "normal", arg: t.call(e, r) };
            } catch (t) {
              return { type: "throw", arg: t };
            }
          }
          function i() {}
          function a() {}
          function c() {}
          function u(e) {
            ["next", "throw", "return"].forEach(function (r) {
              t(e, r, function (t) {
                return this._invoke(r, t);
              });
            });
          }
          function s(t, e) {
            function o(i, a, c, u) {
              var s = r(t[i], t, a);
              if ("throw" !== s.type) {
                var l = s.arg,
                  f = l.value;
                return f && "object" == n(f) && w.call(f, "__await")
                  ? e.resolve(f.__await).then(
                      function (t) {
                        o("next", t, c, u);
                      },
                      function (t) {
                        o("throw", t, c, u);
                      }
                    )
                  : e.resolve(f).then(
                      function (t) {
                        (l.value = t), c(l);
                      },
                      function (t) {
                        return o("throw", t, c, u);
                      }
                    );
              }
              u(s.arg);
            }
            var i;
            b(this, "_invoke", {
              value: function (t, r) {
                function n() {
                  return new e(function (e, n) {
                    o(t, r, e, n);
                  });
                }
                return (i = i ? i.then(n, n) : n());
              },
            });
          }
          function l(t, e, n) {
            var o = O;
            return function (i, a) {
              if (o === j) throw new Error("Generator is already running");
              if (o === S) {
                if ("throw" === i) throw a;
                return { value: d, done: !0 };
              }
              for (n.method = i, n.arg = a; ; ) {
                var c = n.delegate;
                if (c) {
                  var u = f(c, n);
                  if (u) {
                    if (u === N) continue;
                    return u;
                  }
                }
                if ("next" === n.method) n.sent = n._sent = n.arg;
                else if ("throw" === n.method) {
                  if (o === O) throw ((o = S), n.arg);
                  n.dispatchException(n.arg);
                } else "return" === n.method && n.abrupt("return", n.arg);
                o = j;
                var s = r(t, e, n);
                if ("normal" === s.type) {
                  if (((o = n.done ? S : _), s.arg === N)) continue;
                  return { value: s.arg, done: n.done };
                }
                "throw" === s.type && ((o = S), (n.method = "throw"), (n.arg = s.arg));
              }
            };
          }
          function f(t, e) {
            var n = e.method,
              o = t.iterator[n];
            if (o === d)
              return (
                (e.delegate = null),
                ("throw" === n && t.iterator.return && ((e.method = "return"), (e.arg = d), f(t, e), "throw" === e.method)) ||
                  ("return" !== n &&
                    ((e.method = "throw"), (e.arg = new TypeError("The iterator does not provide a '" + n + "' method")))),
                N
              );
            var i = r(o, t.iterator, e.arg);
            if ("throw" === i.type) return (e.method = "throw"), (e.arg = i.arg), (e.delegate = null), N;
            var a = i.arg;
            return a
              ? a.done
                ? ((e[t.resultName] = a.value),
                  (e.next = t.nextLoc),
                  "return" !== e.method && ((e.method = "next"), (e.arg = d)),
                  (e.delegate = null),
                  N)
                : a
              : ((e.method = "throw"), (e.arg = new TypeError("iterator result is not an object")), (e.delegate = null), N);
          }
          function h(t) {
            var e = { tryLoc: t[0] };
            1 in t && (e.catchLoc = t[1]), 2 in t && ((e.finallyLoc = t[2]), (e.afterLoc = t[3])), this.tryEntries.push(e);
          }
          function p(t) {
            var e = t.completion || {};
            (e.type = "normal"), delete e.arg, (t.completion = e);
          }
          function y(t) {
            (this.tryEntries = [{ tryLoc: "root" }]), t.forEach(h, this), this.reset(!0);
          }
          function v(t) {
            if (t || "" === t) {
              var e = t[E];
              if (e) return e.call(t);
              if ("function" == typeof t.next) return t;
              if (!isNaN(t.length)) {
                var r = -1,
                  o = function e() {
                    for (; ++r < t.length; ) if (w.call(t, r)) return (e.value = t[r]), (e.done = !1), e;
                    return (e.value = d), (e.done = !0), e;
                  };
                return (o.next = o);
              }
            }
            throw new TypeError(n(t) + " is not iterable");
          }
          o = function () {
            return m;
          };
          var d,
            m = {},
            g = Object.prototype,
            w = g.hasOwnProperty,
            b =
              Object.defineProperty ||
              function (t, e, r) {
                t[e] = r.value;
              },
            x = "function" == typeof Symbol ? Symbol : {},
            E = x.iterator || "@@iterator",
            L = x.asyncIterator || "@@asyncIterator",
            k = x.toStringTag || "@@toStringTag";
          try {
            t({}, "");
          } catch (d) {
            t = function (t, e, r) {
              return (t[e] = r);
            };
          }
          m.wrap = e;
          var O = "suspendedStart",
            _ = "suspendedYield",
            j = "executing",
            S = "completed",
            N = {},
            T = {};
          t(T, E, function () {
            return this;
          });
          var P = Object.getPrototypeOf,
            G = P && P(P(v([])));
          G && G !== g && w.call(G, E) && (T = G);
          var I = (c.prototype = i.prototype = Object.create(T));
          return (
            (a.prototype = c),
            b(I, "constructor", { value: c, configurable: !0 }),
            b(c, "constructor", { value: a, configurable: !0 }),
            (a.displayName = t(c, k, "GeneratorFunction")),
            (m.isGeneratorFunction = function (t) {
              var e = "function" == typeof t && t.constructor;
              return !!e && (e === a || "GeneratorFunction" === (e.displayName || e.name));
            }),
            (m.mark = function (e) {
              return (
                Object.setPrototypeOf ? Object.setPrototypeOf(e, c) : ((e.__proto__ = c), t(e, k, "GeneratorFunction")),
                (e.prototype = Object.create(I)),
                e
              );
            }),
            (m.awrap = function (t) {
              return { __await: t };
            }),
            u(s.prototype),
            t(s.prototype, L, function () {
              return this;
            }),
            (m.AsyncIterator = s),
            (m.async = function (t, r, n, o, i) {
              void 0 === i && (i = Promise);
              var a = new s(e(t, r, n, o), i);
              return m.isGeneratorFunction(r)
                ? a
                : a.next().then(function (t) {
                    return t.done ? t.value : a.next();
                  });
            }),
            u(I),
            t(I, k, "Generator"),
            t(I, E, function () {
              return this;
            }),
            t(I, "toString", function () {
              return "[object Generator]";
            }),
            (m.keys = function (t) {
              var e = Object(t),
                r = [];
              for (var n in e) r.push(n);
              return (
                r.reverse(),
                function t() {
                  for (; r.length; ) {
                    var n = r.pop();
                    if (n in e) return (t.value = n), (t.done = !1), t;
                  }
                  return (t.done = !0), t;
                }
              );
            }),
            (m.values = v),
            (y.prototype = {
              constructor: y,
              reset: function (t) {
                if (
                  ((this.prev = 0),
                  (this.next = 0),
                  (this.sent = this._sent = d),
                  (this.done = !1),
                  (this.delegate = null),
                  (this.method = "next"),
                  (this.arg = d),
                  this.tryEntries.forEach(p),
                  !t)
                )
                  for (var e in this) "t" === e.charAt(0) && w.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = d);
              },
              stop: function () {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type) throw t.arg;
                return this.rval;
              },
              dispatchException: function (t) {
                function e(e, n) {
                  return (i.type = "throw"), (i.arg = t), (r.next = e), n && ((r.method = "next"), (r.arg = d)), !!n;
                }
                if (this.done) throw t;
                for (var r = this, n = this.tryEntries.length - 1; n >= 0; --n) {
                  var o = this.tryEntries[n],
                    i = o.completion;
                  if ("root" === o.tryLoc) return e("end");
                  if (o.tryLoc <= this.prev) {
                    var a = w.call(o, "catchLoc"),
                      c = w.call(o, "finallyLoc");
                    if (a && c) {
                      if (this.prev < o.catchLoc) return e(o.catchLoc, !0);
                      if (this.prev < o.finallyLoc) return e(o.finallyLoc);
                    } else if (a) {
                      if (this.prev < o.catchLoc) return e(o.catchLoc, !0);
                    } else {
                      if (!c) throw new Error("try statement without catch or finally");
                      if (this.prev < o.finallyLoc) return e(o.finallyLoc);
                    }
                  }
                }
              },
              abrupt: function (t, e) {
                for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                  var n = this.tryEntries[r];
                  if (n.tryLoc <= this.prev && w.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                    var o = n;
                    break;
                  }
                }
                o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);
                var i = o ? o.completion : {};
                return (i.type = t), (i.arg = e), o ? ((this.method = "next"), (this.next = o.finallyLoc), N) : this.complete(i);
              },
              complete: function (t, e) {
                if ("throw" === t.type) throw t.arg;
                return (
                  "break" === t.type || "continue" === t.type
                    ? (this.next = t.arg)
                    : "return" === t.type
                    ? ((this.rval = this.arg = t.arg), (this.method = "return"), (this.next = "end"))
                    : "normal" === t.type && e && (this.next = e),
                  N
                );
              },
              finish: function (t) {
                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                  var r = this.tryEntries[e];
                  if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), p(r), N;
                }
              },
              catch: function (t) {
                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                  var r = this.tryEntries[e];
                  if (r.tryLoc === t) {
                    var n = r.completion;
                    if ("throw" === n.type) {
                      var o = n.arg;
                      p(r);
                    }
                    return o;
                  }
                }
                throw new Error("illegal catch attempt");
              },
              delegateYield: function (t, e, r) {
                return (
                  (this.delegate = { iterator: v(t), resultName: e, nextLoc: r }), "next" === this.method && (this.arg = d), N
                );
              },
            }),
            m
          );
        }
        function i(t, e, r, n, o, i, a) {
          try {
            var c = t[i](a),
              u = c.value;
          } catch (t) {
            return void r(t);
          }
          c.done ? e(u) : Promise.resolve(u).then(n, o);
        }
        function a(t) {
          return function () {
            var e = this,
              r = arguments;
            return new Promise(function (n, o) {
              function a(t) {
                i(u, n, o, a, c, "next", t);
              }
              function c(t) {
                i(u, n, o, a, c, "throw", t);
              }
              var u = t.apply(e, r);
              a(void 0);
            });
          };
        }
        var c = document.getElementById("searchTerm"),
          u = document.getElementById("songsList"),
          s = document.getElementById("noSongs"),
          l = document.getElementById("loadingSpinner"),
          f = null,
          h = function (t) {
            var e = document.createElement("li"),
              r = document.createElement("p");
            return (r.innerHTML = "".concat(t.artist, " - ").concat(t.song)), e.appendChild(r), e;
          },
          p = (function () {
            var t = a(
              o().mark(function t(e) {
                var r, n, i, a;
                return o().wrap(
                  function (t) {
                    for (;;)
                      switch ((t.prev = t.next)) {
                        case 0:
                          return (
                            (r = "https://itunes.apple.com/search?term=".concat(e, "&media=music")),
                            (t.prev = 1),
                            (t.next = 4),
                            fetch(r)
                          );
                        case 4:
                          return (n = t.sent), (t.next = 7), n.json();
                        case 7:
                          return (
                            (i = t.sent),
                            (a = i.results.map(function (t) {
                              return { artist: t.artistName, song: t.trackName };
                            })),
                            t.abrupt("return", a)
                          );
                        case 12:
                          return (t.prev = 12), (t.t0 = t.catch(1)), console.log(t.t0), t.abrupt("return", []);
                        case 16:
                        case "end":
                          return t.stop();
                      }
                  },
                  t,
                  null,
                  [[1, 12]]
                );
              })
            );
            return function (e) {
              return t.apply(this, arguments);
            };
          })(),
          y = function (t) {
            clearTimeout(f),
              (f = setTimeout(
                a(
                  o().mark(function t() {
                    var e, r, n, i;
                    return o().wrap(function (t) {
                      for (;;)
                        switch ((t.prev = t.next)) {
                          case 0:
                            for (; u.firstChild; ) u.removeChild(u.firstChild);
                            if (((e = c.value), !e)) {
                              t.next = 13;
                              break;
                            }
                            return (s.style.display = "none"), (l.style.display = "block"), (r = []), (t.next = 8), p(e);
                          case 8:
                            if (((r = t.sent), (l.style.display = "none"), 0 !== r.lenght))
                              for (n in r) r[n].artist && r[n].song && ((i = h(r[n])), u.appendChild(i));
                            else s.style.display = "block";
                            t.next = 14;
                            break;
                          case 13:
                            s.style.display = "block";
                          case 14:
                          case "end":
                            return t.stop();
                        }
                    }, t);
                  })
                ),
                900
              ));
          };
        c.addEventListener("keyup", y);
      },
      {},
    ],
  },
  {},
  [1]
);
